// <auto-generated />
using System;
using Entities.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Entities.Migrations
{
    [DbContext(typeof(ProyectoFinalWebContext))]
    [Migration("20240725174454_initia")]
    partial class initia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CartasEnMazo", b =>
                {
                    b.Property<int>("MazoId")
                        .HasColumnType("int")
                        .HasColumnName("mazo_id");

                    b.Property<int>("CartaId")
                        .HasColumnType("int")
                        .HasColumnName("carta_id");

                    b.HasKey("MazoId", "CartaId")
                        .HasName("PK__cartas_e__2D5B1630D4735FA7");

                    b.HasIndex("CartaId");

                    b.ToTable("cartas_en_mazo", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Carta", b =>
                {
                    b.Property<int>("CartaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("carta_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartaId"));

                    b.Property<DateTime?>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creado_en")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<int?>("PuntosAtaque")
                        .HasColumnType("int")
                        .HasColumnName("puntos_ataque");

                    b.Property<int?>("PuntosDefensa")
                        .HasColumnType("int")
                        .HasColumnName("puntos_defensa");

                    b.HasKey("CartaId")
                        .HasName("PK__cartas__D8704F7BE1CB01CC");

                    b.ToTable("cartas", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Mazo", b =>
                {
                    b.Property<int>("MazoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("mazo_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MazoId"));

                    b.Property<DateTime?>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creado_en")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreMazo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_mazo");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    b.HasKey("MazoId")
                        .HasName("PK__mazos__80DC12C788FBDCDD");

                    b.HasIndex("UsuarioId");

                    b.ToTable("mazos", (string)null);
                });

            modelBuilder.Entity("Entities.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("usuario_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("contrasena_hash");

                    b.Property<DateTime?>("CreadoEn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creado_en")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("rol");

                    b.HasKey("UsuarioId")
                        .HasName("PK__usuarios__2ED7D2AFA4D7C62B");

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ__usuarios__D4D22D74D19F414C")
                        .IsUnique();

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("CartasEnMazo", b =>
                {
                    b.HasOne("Entities.Entities.Carta", null)
                        .WithMany()
                        .HasForeignKey("CartaId")
                        .IsRequired()
                        .HasConstraintName("FK__cartas_en__carta__4316F928");

                    b.HasOne("Entities.Entities.Mazo", null)
                        .WithMany()
                        .HasForeignKey("MazoId")
                        .IsRequired()
                        .HasConstraintName("FK__cartas_en__mazo___4222D4EF");
                });

            modelBuilder.Entity("Entities.Entities.Mazo", b =>
                {
                    b.HasOne("Entities.Entities.Usuario", "Usuario")
                        .WithMany("Mazos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK__mazos__usuario_i__3E52440B");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Entities.Entities.Usuario", b =>
                {
                    b.Navigation("Mazos");
                });
#pragma warning restore 612, 618
        }
    }
}
